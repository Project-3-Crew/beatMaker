{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kinga\\\\beatMaker\\\\client\\\\src\\\\components\\\\ThoughtForm\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\nimport Auth from '../../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ThoughtForm = () => {\n  _s();\n\n  const [thoughtText, setThoughtText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n  const [addThought, {\n    error\n  }] = useMutation(ADD_THOUGHT, {\n    update(cache, {\n      data: {\n        addThought\n      }\n    }) {\n      try {\n        const {\n          thoughts\n        } = cache.readQuery({\n          query: QUERY_THOUGHTS\n        });\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: {\n            thoughts: [addThought, ...thoughts]\n          }\n        });\n      } catch (e) {\n        console.error(e);\n      } // update me object's cache\n\n\n      const {\n        me\n      } = cache.readQuery({\n        query: QUERY_ME\n      });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: {\n          me: { ...me,\n            thoughts: [...me.thoughts, addThought]\n          }\n        }\n      });\n    }\n\n  });\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const {\n        data\n      } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.username\n        }\n      });\n      setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Let's talk about Beat Making!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), Auth.loggedIn() ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: `m-0 ${characterCount === 280 || error ? 'text-danger' : ''}`,\n        children: [\"Character Count: \", characterCount, \"/280\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"flex-row justify-center justify-space-between-md align-center\",\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-lg-9\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"thoughtText\",\n            placeholder: \"Here's a new thought...\",\n            value: thoughtText,\n            className: \"form-input w-100\",\n            style: {\n              lineHeight: '1.5',\n              resize: 'vertical'\n            },\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-lg-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-block py-3\",\n            type: \"submit\",\n            children: \"Add Thought\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 my-3 bg-danger text-white p-3\",\n          children: error.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You need to be logged in to share your thoughts. Please\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), \" or \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"signup.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThoughtForm, \"nN2C3fNjFqAhHBqFH6MKYWXIL+o=\", false, function () {\n  return [useMutation];\n});\n\n_c = ThoughtForm;\nexport default ThoughtForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThoughtForm\");","map":{"version":3,"sources":["C:/Users/Kinga/beatMaker/client/src/components/ThoughtForm/index.js"],"names":["React","useState","Link","useMutation","ADD_THOUGHT","QUERY_THOUGHTS","QUERY_ME","Auth","ThoughtForm","thoughtText","setThoughtText","characterCount","setCharacterCount","addThought","error","update","cache","data","thoughts","readQuery","query","writeQuery","e","console","me","handleFormSubmit","event","preventDefault","variables","thoughtAuthor","getProfile","username","err","handleChange","name","value","target","length","loggedIn","lineHeight","resize","message"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_THOUGHT } from '../../utils/mutations';\r\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst ThoughtForm = () => {\r\n  const [thoughtText, setThoughtText] = useState('');\r\n\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n\r\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\r\n    update(cache, { data: { addThought } }) {\r\n      try {\r\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\r\n\r\n        cache.writeQuery({\r\n          query: QUERY_THOUGHTS,\r\n          data: { thoughts: [addThought, ...thoughts] },\r\n        });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n\r\n      // update me object's cache\r\n      const { me } = cache.readQuery({ query: QUERY_ME });\r\n      cache.writeQuery({\r\n        query: QUERY_ME,\r\n        data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await addThought({\r\n        variables: {\r\n          thoughtText,\r\n          thoughtAuthor: Auth.getProfile().data.username,\r\n        },\r\n      });\r\n\r\n      setThoughtText('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'thoughtText' && value.length <= 280) {\r\n      setThoughtText(value);\r\n      setCharacterCount(value.length);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Let's talk about Beat Making!</h3>\r\n\r\n      {Auth.loggedIn() ? (\r\n        <>\r\n          <p\r\n            className={`m-0 ${\r\n              characterCount === 280 || error ? 'text-danger' : ''\r\n            }`}\r\n          >\r\n            Character Count: {characterCount}/280\r\n          </p>\r\n          <form\r\n            className=\"flex-row justify-center justify-space-between-md align-center\"\r\n            onSubmit={handleFormSubmit}\r\n          >\r\n            <div className=\"col-12 col-lg-9\">\r\n              <textarea\r\n                name=\"thoughtText\"\r\n                placeholder=\"Here's a new thought...\"\r\n                value={thoughtText}\r\n                className=\"form-input w-100\"\r\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                onChange={handleChange}\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-lg-3\">\r\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\r\n                Add Thought\r\n              </button>\r\n            </div>\r\n            {error && (\r\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <p>\r\n          You need to be logged in to share your thoughts. Please{' '}\r\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThoughtForm;\r\n"]},"metadata":{},"sourceType":"module"}