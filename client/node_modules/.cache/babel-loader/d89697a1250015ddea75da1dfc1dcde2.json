{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kinga\\\\beatMaker\\\\client\\\\src\\\\pages\\\\Sounds.js\",\n    _s = $RefreshSig$();\n\n// import React from \"react\";\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Sounds() {\n  _s();\n\n  // use Audio constructor to create HTMLAudioElement\n  const audioTune = new Audio('<YOUR_AUDIO_FILE_PATH.mp3>'); // variable to play audio in loop\n\n  const [playInLoop, setPlayInLoop] = useState(false); // load audio file on component load\n\n  useEffect(() => {\n    audioTune.load();\n  }, []); // set the loop of audio tune\n\n  useEffect(() => {\n    audioTune.loop = playInLoop;\n  }, [playInLoop]); // play audio sound\n\n  const playSound = () => {\n    audioTune.play();\n  }; // pause audio sound\n\n\n  const pauseSound = () => {\n    audioTune.pause();\n  }; // stop audio sound\n\n\n  const stopSound = () => {\n    audioTune.pause();\n    audioTune.currentTime = 0;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"mb-4\",\n      children: [\"Play an mp3 file - \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.cluemediator.com\",\n        children: \"Clue Mediator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 47\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      className: \"btn btn-primary mr-2\",\n      value: \"Play\",\n      onClick: playSound\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      className: \"btn btn-warning mr-2\",\n      value: \"Pause\",\n      onClick: pauseSound\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      className: \"btn btn-danger mr-2\",\n      value: \"Stop\",\n      onClick: stopSound\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: playInLoop,\n        onChange: e => setPlayInLoop(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }, this), \" Play in Loop\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n} // function Sounds() {\n//     const beats = []\n//     let song = new Audio(\"/audio/filename.mp3\")\n// render a single song\n// onclick to play on button\n// trigger button press on key press\n// onClick multi\n// write map function to dynamically render each beat sound\n// return (\n// <div>\n//       <h2>Beat Maker</h2>\n//       <button onClick></button>\n//   </div>\n// )\n// const beats =  [\n//     {\n//       keyCode: 81,\n//       keyTrigger: 'Q',\n//       id: 'Heater-1',\n//       url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\n//     },\n//     {\n//       keyCode: 87,\n//       keyTrigger: 'W',\n//       id: 'Heater-2',\n//       url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\n//     },\n//     {\n//       keyCode: 69,\n//       keyTrigger: 'E',\n//       id: 'Heater-3',\n//       url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\n//     },\n//     {\n//       keyCode: 65,\n//       keyTrigger: 'A',\n//       id: 'Heater-4',\n//       url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\n//     },\n//     {\n//       keyCode: 83,\n//       keyTrigger: 'S',\n//       id: 'Clap',\n//       url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\n//     },\n//     {\n//       keyCode: 68,\n//       keyTrigger: 'D',\n//       id: 'Open-HH',\n//       url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\n//     },\n//     {\n//       keyCode: 90,\n//       keyTrigger: 'Z',\n//       id: \"Kick-n'-Hat\",\n//       url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\n//     },\n//     {\n//       keyCode: 88,\n//       keyTrigger: 'X',\n//       id: 'Kick',\n//       url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\n//     },\n//     {\n//       keyCode: 67,\n//       keyTrigger: 'C',\n//       id: 'Closed-HH',\n//       url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\n//     }\n//   ];\n//   beats()\n\n\n_s(Sounds, \"wp6p757ZUOW/+YN8597SFBsx5wY=\");\n\n_c = Sounds;\nexport default Sounds;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sounds\");","map":{"version":3,"sources":["C:/Users/Kinga/beatMaker/client/src/pages/Sounds.js"],"names":["React","useEffect","useState","Sounds","audioTune","Audio","playInLoop","setPlayInLoop","load","loop","playSound","play","pauseSound","pause","stopSound","currentTime","e","target","checked"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAEhB;AACA,QAAMC,SAAS,GAAG,IAAIC,KAAJ,CAAU,4BAAV,CAAlB,CAHgB,CAKhB;;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,KAAD,CAA5C,CANgB,CAQhB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,SAAS,CAACI,IAAV;AACD,GAFQ,EAEN,EAFM,CAAT,CATgB,CAahB;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,SAAS,CAACK,IAAV,GAAiBH,UAAjB;AACD,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT,CAdgB,CAkBhB;;AACA,QAAMI,SAAS,GAAG,MAAM;AACtBN,IAAAA,SAAS,CAACO,IAAV;AACD,GAFD,CAnBgB,CAuBhB;;;AACA,QAAMC,UAAU,GAAG,MAAM;AACvBR,IAAAA,SAAS,CAACS,KAAV;AACD,GAFD,CAxBgB,CA4BhB;;;AACA,QAAMC,SAAS,GAAG,MAAM;AACtBV,IAAAA,SAAS,CAACS,KAAV;AACAT,IAAAA,SAAS,CAACW,WAAV,GAAwB,CAAxB;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA,qDAAwC;AAAG,QAAA,IAAI,EAAC,8BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,sBAA/B;AAAsD,MAAA,KAAK,EAAC,MAA5D;AAAmE,MAAA,OAAO,EAAEL;AAA5E;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,sBAA/B;AAAsD,MAAA,KAAK,EAAC,OAA5D;AAAoE,MAAA,OAAO,EAAEE;AAA7E;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,qBAA/B;AAAqD,MAAA,KAAK,EAAC,MAA3D;AAAkE,MAAA,OAAO,EAAEE;AAA3E;AAAA;AAAA;AAAA;AAAA,YALF,eAOE;AAAA,8BAAO;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,EAAER,UAAhC;AAA4C,QAAA,QAAQ,EAAEU,CAAC,IAAIT,aAAa,CAACS,CAAC,CAACC,MAAF,CAASC,OAAV;AAAxE;AAAA;AAAA;AAAA;AAAA,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,C,CAKD;AACA;AAEA;AAEI;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;GA5HKf,M;;KAAAA,M;AAmIT,eAAeA,MAAf","sourcesContent":["// import React from \"react\";\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n \r\nfunction Sounds() {\r\n \r\n  // use Audio constructor to create HTMLAudioElement\r\n  const audioTune = new Audio('<YOUR_AUDIO_FILE_PATH.mp3>');\r\n \r\n  // variable to play audio in loop\r\n  const [playInLoop, setPlayInLoop] = useState(false);\r\n \r\n  // load audio file on component load\r\n  useEffect(() => {\r\n    audioTune.load();\r\n  }, [])\r\n \r\n  // set the loop of audio tune\r\n  useEffect(() => {\r\n    audioTune.loop = playInLoop;\r\n  }, [playInLoop])\r\n \r\n  // play audio sound\r\n  const playSound = () => {\r\n    audioTune.play();\r\n  }\r\n \r\n  // pause audio sound\r\n  const pauseSound = () => {\r\n    audioTune.pause();\r\n  }\r\n \r\n  // stop audio sound\r\n  const stopSound = () => {\r\n    audioTune.pause();\r\n    audioTune.currentTime = 0;\r\n  }\r\n \r\n  return (\r\n    <div className=\"App\">\r\n      <h3 className=\"mb-4\">Play an mp3 file - <a href=\"https://www.cluemediator.com\">Clue Mediator</a></h3>\r\n \r\n      <input type=\"button\" className=\"btn btn-primary mr-2\" value=\"Play\" onClick={playSound}></input>\r\n      <input type=\"button\" className=\"btn btn-warning mr-2\" value=\"Pause\" onClick={pauseSound}></input>\r\n      <input type=\"button\" className=\"btn btn-danger mr-2\" value=\"Stop\" onClick={stopSound}></input>\r\n \r\n      <label><input type=\"checkbox\" checked={playInLoop} onChange={e => setPlayInLoop(e.target.checked)} /> Play in Loop</label>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n// function Sounds() {\r\n//     const beats = []\r\n\r\n//     let song = new Audio(\"/audio/filename.mp3\")\r\n\r\n    // render a single song\r\n    // onclick to play on button\r\n    // trigger button press on key press\r\n    // onClick multi\r\n    // write map function to dynamically render each beat sound\r\n\r\n    // return (\r\n    // <div>\r\n    //       <h2>Beat Maker</h2>\r\n    //       <button onClick></button>\r\n    //   </div>\r\n    // )\r\n    // const beats =  [\r\n    //     {\r\n    //       keyCode: 81,\r\n    //       keyTrigger: 'Q',\r\n    //       id: 'Heater-1',\r\n    //       url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\r\n    //     },\r\n    //     {\r\n    //       keyCode: 87,\r\n    //       keyTrigger: 'W',\r\n    //       id: 'Heater-2',\r\n    //       url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\r\n    //     },\r\n    //     {\r\n    //       keyCode: 69,\r\n    //       keyTrigger: 'E',\r\n    //       id: 'Heater-3',\r\n    //       url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\r\n    //     },\r\n    //     {\r\n    //       keyCode: 65,\r\n    //       keyTrigger: 'A',\r\n    //       id: 'Heater-4',\r\n    //       url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\r\n    //     },\r\n    //     {\r\n    //       keyCode: 83,\r\n    //       keyTrigger: 'S',\r\n    //       id: 'Clap',\r\n    //       url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\r\n    //     },\r\n    //     {\r\n    //       keyCode: 68,\r\n    //       keyTrigger: 'D',\r\n    //       id: 'Open-HH',\r\n    //       url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\r\n    //     },\r\n    //     {\r\n    //       keyCode: 90,\r\n    //       keyTrigger: 'Z',\r\n    //       id: \"Kick-n'-Hat\",\r\n    //       url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\r\n    //     },\r\n    //     {\r\n    //       keyCode: 88,\r\n    //       keyTrigger: 'X',\r\n    //       id: 'Kick',\r\n    //       url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\r\n    //     },\r\n    //     {\r\n    //       keyCode: 67,\r\n    //       keyTrigger: 'C',\r\n    //       id: 'Closed-HH',\r\n    //       url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\r\n    //     }\r\n    //   ];\r\n    \r\n    //   beats()\r\n      \r\n      \r\n      \r\n      \r\n  \r\n \r\nexport default Sounds"]},"metadata":{},"sourceType":"module"}